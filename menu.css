.menu-wrap {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1;
}

/* our checkbox will be with 0 opasity, 
we need our checkbox for its ability to be in checked position
because when it's gonna be checked 
at that position we will create our overlay  */

/* the checkbox is just for functioanality
the humburger class is for square creation and
its inner div is for lines inside*/

.menu-wrap .toggler {
  /* checkbox */
  position: absolute;
  top: 5px;
  left: 5px;
  cursor: pointer;
  width: 50px;
  height: 50px;
  /*  !!!!! below !!!!!  */
  z-index: 2;
  opacity: 0;
}

.menu-wrap .hamburger {
  position: absolute;
  top: 5px;
  left: 5px;
  z-index: 1;
  width: 60px;
  height: 60px;
  padding: 1rem;
  background: var(--primary-color);
  border-radius: 15px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.menu-wrap .hamburger > div {
  position: relative;
  flex: none;
  /* it takes 100% of width aside the padding */
  width: 100%;
  /* we are creating the middle line of the hamburger */
  height: 2px;
  background: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.4s ease;
}

/* pseudo selector for creating other two, top and bottom, lines */

.menu-wrap .hamburger > div::before,
.menu-wrap .hamburger > div::after {
  content: "";
  position: absolute;
  /* we can see those because of the z-index */
  z-index: 1;
  top: -10px;
  width: 100%;
  height: 2px;
  background: inherit;
}

/* last line, at the bottom */
.menu-wrap .hamburger > div::after {
  top:10px;
}

/* Toggler animation */

/* !!!! с помощью "+" мы объединяем действие когда наша
чекбокс в состоянии чекд и те изменения которые происходят 
в диве с линиями */
.menu-wrap .toggler:checked + .hamburger > div {
  transform: rotate(135deg);
}

.menu-wrap .toggler:checked + .hamburger > div::before,
.menu-wrap .toggler:checked + .hamburger > div::after {
  /* made them into two lines because of top: 0 */
  top: 0; 
  transform: rotate(90deg);
}

/*  Rotate on hover when checked*/
/* обрати внимание,что в "формуле" можно сочетать
 :checked и :hover в на основании этих условий
 потом влиять на див с линиями, 
 в этом случае посредством transform
  */
.menu-wrap .toggler:checked:hover + .hamburger > div {
  transform: rotate(225deg);
}

/* Show menu */
/* the way we targeting the menu class
when checkbox is checked, we use "~" in order
to target smth that precedes another element
 */
.menu-wrap .toggler:checked ~ .menu {
  visibility: visible;
}

.menu-wrap .toggler:checked ~ .menu > div {
  transform: scale(1);
}

.menu-wrap .toggler:checked ~ .menu > div > div {
  opacity: 1;
}

.menu-wrap .menu {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height:100%;
  /*  */
  visibility: hidden;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Див, который отвечает за темный фон меню */
.menu-wrap .menu > div {
  background: var(--overlay-color);
  width: 300vw;
  height: 300vh;
  border-radius: 50%;
  /* автор почему-то решил пере-recenter-ить всё */
  display: flex;
  flex: none;
  align-items: center;
  justify-content: center;
  /* everything disapears with scale(0) */
  /*  */
  transform: scale(0) ;
  /* we want to transition the scale from 0 to another value */
  transition: all 0.4s ease;
}

.menu-wrap .menu > div > div {
  text-align: center;
  /* it's inside the part we're scaling
  where width and height are 200 */
  max-width: 90vw;
  max-height:100vh;
  /*  */
  opacity: 0;
  /* этот Див отвечает за то, чтобы меню появилось не сразу, 
  а посредством transition и его условий*/
  transition: opacity 0.5s ease;
}

.menu-wrap .menu > div > div > ul > li {
  list-style: none;  
  font-size: 1.5rem;
  font-weight: 300;
  padding: 0.7rem;
}

.menu-wrap .menu > div > div > ul > li > a {
  color: #fff;
  text-decoration: none;
  transition: color 0.4s ease;
}

.menu-wrap .menu > div > div > ul > li > a:hover {
  color:rgb(240, 193, 193); 
}
























































































































































